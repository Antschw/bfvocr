<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.antschw</groupId>
    <artifactId>bfvocr</artifactId>
    <version>1.0.0</version>

    <name>bfv-server-ocr</name>
    <description>Battlefield V Server Number OCR Extraction</description>

    <properties>
        <maven.compiler.release>21</maven.compiler.release>
        <maven.javadoc.source>21</maven.javadoc.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Dependency versions -->
        <tess4j.version>5.11.0</tess4j.version>
        <javacpp.platform.version>1.5.11</javacpp.platform.version>
        <opencv.version>4.10.0-${javacpp.platform.version}</opencv.version>
        <tesseract.version>5.5.0-${javacpp.platform.version}</tesseract.version>
        <leptonica.version>1.85.0-${javacpp.platform.version}</leptonica.version>
        <slf4j.version>2.0.12</slf4j.version>
        <logback.version>1.5.18</logback.version>
        <guice.version>7.0.0</guice.version>
        <junit.version>5.10.2</junit.version>
        <mockito.version>5.16.1</mockito.version>

        <!-- Plugin versions -->
        <compiler.version>3.14.0</compiler.version>
        <source.version>3.3.1</source.version>
        <javadoc.version>3.11.2</javadoc.version>
        <surfire.version>3.5.3</surfire.version>
        <install.version>3.1.4</install.version>
    </properties>

    <dependencies>
        <!-- Tess4J OCR -->
        <dependency>
            <groupId>net.sourceforge.tess4j</groupId>
            <artifactId>tess4j</artifactId>
            <version>${tess4j.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- JavaCPP platform-specific dependencies for Tesseract -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>tesseract-platform</artifactId>
            <version>${tesseract.version}</version>
        </dependency>

        <!-- Leptonica dependency (required by Tesseract) -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>leptonica-platform</artifactId>
            <version>${leptonica.version}</version>
        </dependency>

        <!-- OpenCV (Java binding with platform-specific natives) -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>opencv-platform</artifactId>
            <version>${opencv.version}</version>
        </dependency>

        <!-- SLF4J logging API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- Logback for logging implementation -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Google Guice for DI -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <!-- Testing dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Keeping the same resource configurations -->
        <testResources>
            <testResource>
                <directory>src/main/resources</directory>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.traineddata</include>
                    <include>**/*.png</include>
                </includes>
            </resource>
        </resources>

        <plugins>
            <!-- Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${compiler.version}</version>
                <configuration>
                    <release>${maven.compiler.release}</release>
                </configuration>
            </plugin>

            <!-- Source plugin to include source code -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${source.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- JavaDoc configuration -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${javadoc.version}</version>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <source>${maven.javadoc.source}</source>
                    <additionalJOption>-Xdoclint:none</additionalJOption>
                    <detectJavaApiLink>false</detectJavaApiLink>
                    <tags>
                        <tag>
                            <name>implNote</name>
                            <placement>a</placement>
                            <head>Implementation Note:</head>
                        </tag>
                    </tags>
                </configuration>
            </plugin>

            <!-- Unit testing plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surfire.version}</version>
                <configuration>
                    <argLine>
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        -XX:+EnableDynamicAgentLoading
                        -Xshare:off
                    </argLine>
                </configuration>
            </plugin>

            <!-- Install plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${install.version}</version>
            </plugin>
        </plugins>
    </build>
</project>